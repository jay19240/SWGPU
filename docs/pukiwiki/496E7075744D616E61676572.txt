* Class: InputManager

Singleton input manager.~
Handle various sources such as keyboard and gamepad.~
** Constructors
- ''new InputManager''(): InputManager~
** Methods
- ''findActionIds''(inputSource: string, eventKey: string)~
Returns the action list that match the given input source and event key.~
-- ''inputSource'': The device from which the input is received.~
-- ''eventKey'': The key or button that triggers the action.~
~
- ''getPad''(index: number)~
Returns a pad or undefined if not found.~
Note: Pads are automatically added on plug-in.~
-- ''index'': The index of the pad.~
~
- ''isActiveAction''(actionId: string)~
Checks if an action is currently active.~
-- ''actionId'': The action identifier.~
~
- ''registerAction''(inputSource: string, eventKey: string, actionId: string): void~
Add an action mapping.~
-- ''inputSource'': The device from which the input is received.~
-- ''eventKey'': The key or button that triggers the action.~
-- ''actionId'': The unique action identifier.~
~
- ''removePad''(id: string): void~
Removes a pad.~
-- ''id'': The unique identifier of the pad~
~
- ''unregisterAction''(inputSource: string, eventKey: string, actionId: string): void~
Remove an action mapping.~
-- ''inputSource'': The device from which the input is received.~
-- ''eventKey'': The key or button that triggers the action.~
-- ''actionId'': The unique action identifier.~
