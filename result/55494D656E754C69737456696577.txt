* Class: UIMenuListView

The `UIMenuListView` is a class that extends UIMenu and provides functionality for
automaticaly update display from a datasource event-based called a "collection".
- inherit from: UIMenu~
** Methods
- ''addItem''(item: T, enabled: boolean, index: number): void~
The "addItem" function is a virtual method called when data is added to the collection.
It create the wanted widget item and add it to the menu.
Warning: please don't forget to overwrite this method otherwise list-view will stay empty ;)~
-- ''item'': The "item" parameter is of type T, which means it can be any type. It represents
the item that you want to add to the data-source collection.~
-- ''enabled'': The "enabled" parameter is a boolean value that determines whether
the item should be enabled or disabled. By default, it is set to true, meaning the item is enabled.~
-- ''index'': The index parameter is an optional parameter that specifies the position at
which the item should be added in the list. If no index is provided, the item will be added at the
end of the list.~
~
- ''delete''(): void~
The "delete" function free all resources.
Warning: you need to call this method to free allocation for this object.~
~
- ''getFocusedItem''(): T~
The "getFocusedItem" function returns the focused data item.~
~
- ''getSelectedItem''(): T~
The "getSelectedItem" function returns the selected data item.~
~
- ''getViews''()~
The "getViews" function returns the list of displayed item data (called as "views").~
~
- ''handleItemAdded''(data: any): void~
The "handleItemAdded" function.
Update the list-view when item is added to the collection.~
-- ''data''~
~
- ''handleItemRemoved''(data: any): void~
The "handleItemRemoved" function.
Update the list-view when item is removed from the collection.~
-- ''data''~
~
- ''setCollection''(collection: ArrayCollection): void~
The "setCollection" function sets a new data-source collection.~
-- ''collection'': The data-source collection.~
~
- ''setEnablePredicate''(enablePredicate): void~
The "setEnablePredicate" function sets a new enable predicate to determine whether an item
should be enabled or disabled.~
-- ''enablePredicate'': A function that takes an argument of type T and returns a boolean value.
This function is used to determine whether an item should be enabled or disabled.~
~
- ''setFilterPredicate''(filterPredicate): void~
The "setFilterPredicate" function sets a filter predicate to determine whether an item
should be display or hidden.~
-- ''filterPredicate'': The filterPredicate is a function that takes an argument of type T (the
generic type of the collection) and returns a boolean value. It is used to determine whether an item
should be included in the filtered views or not.~
~
- ''setSortPredicate''(sortPredicate): void~
The "setSortPredicate" function sets the sort predicate to determine the order of items.~
-- ''sortPredicate'': A function that takes in two parameters of type T and returns a number. This
function is used to determine the sorting order of the items in the list-view.~
** Constructors
- ''new UIMenuListView''(options): UIMenuListView~
The constructor.~
-- ''options'': An object containing various options for configuring the behavior of the menu.
Nota bene: same options as for UIMenu.~
