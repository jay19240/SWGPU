* Class: SoundManager

The `SoundManager` class is a singleton responsible for managing, loading, caching and playing
sounds.
** Methods
- ''deleteSound''(path: string): void~
The "deleteSound" function deletes a sound if it exists, otherwise it throws an error.~
-- ''path'': The path to the sound file.~
~
- ''isMuted''(groupId: string): boolean~
The "isMuted" function returns a boolean value indicating whether the object is currently muted or
not.~
-- ''groupId''~
~
- ''loadSound''(path: string, groupId: string): Promise~
The "loadSound" function asynchronously loads a sound from a given path and returns it as an
`Sound`, caching it for future use.~
-- ''path'': The file path or URL of the sound that you want to load.~
-- ''groupId''~
~
- ''mute''(muted: boolean, groupId: string): void~
The "mute" function mute/demute audio.~
-- ''muted'': The `muted` parameter is a boolean value that determines whether the sounds
should be muted or not.~
-- ''groupId''~
~
- ''pauseSound''(path: string): void~
The "pauseSound" function pause a sound file if it exists, otherwise it throws an error.~
-- ''path'': The path parameter is a string that represents the location or path of the
sound file that you want to pause.~
~
- ''playSound''(path: string, looped: boolean): Promise~
The "playSound" function plays a sound file if it exists, otherwise it throws an error.~
-- ''path'': The `path` parameter is a string that represents the file path of the sound
file that you want to play.~
-- ''looped''~
~
- ''releaseSounds''(): void~
The "releaseSounds" function deletes all stored sounds.~
~
- ''setVolume''(volume: number, groupId: string): void~
The "setVolume" function sets the audio volume.~
-- ''volume'': The volume parameter is a number that represents the desired volume level.~
-- ''groupId''~
** Constructors
- ''new SoundManager''(): SoundManager~
The constructor.~
