* Class: Screen

The `Screen` is a class that represents a screen in a game, ex: "start-screen", "menu-screen", "game-screen" or "pause-screen.
It is your top-level classes with methods for updating, drawing, entering, exiting.
** Methods
- ''draw''(): void~
The "draw" is a virtual method used for the draw phase.~
~
- ''isBlocking''(): boolean~
The "isBlocking" function returns the `blocking` property.~
~
- ''onBringToBack''(newScreen: Screen): void~
The "onBringToBack" function is a virtual method that is called when the top state level is lost.~
-- ''newScreen'': The new screen that represents the new top level screen.~
~
- ''onBringToFront''(oldScreen: Screen): void~
The "onBringToFront" function is a virtual method that is called when the top state level is
obtained.~
-- ''oldScreen'': The old screen that represents the previous top level screen.~
~
- ''onEnter''(args: any): Promise~
The "onEnter" function is an asynchronous method that is called during the enter phase.~
-- ''args'': The "args" parameter is of type "any", which means it can accept any data type.
It is used to pass any additional arguments or data to the "onEnter" method.~
~
- ''onExit''(): void~
The "onExit" function is a virtual method that is called during the exit phase.~
~
- ''setBlocking''(blocking: boolean): void~
The "setBlocking" function sets the blocking property whether determine if the screen run the
update and draw phases.~
-- ''blocking'': The `blocking` parameter is a boolean value that determines whether the
screen execution should be blocked or not.~
~
- ''update''(ts: number): void~
The "update" is a virtual method used for the update phase.~
-- ''ts'': The `ts` parameter stands for "timestep".~
** Constructors
- ''new Screen''(): Screen~
The constructor.~
