* Class: Gfx3View

The `Gfx3View` class represents a view in a 3D graphics application, providing methods to manipulate
camera settings, projection mode, background color, and calculate screen positions of 3D points.
** Methods
- ''getBgColor''(): vec4~
The "getBgColor" function returns the background color.~
~
- ''getCameraMatrix''(): mat4~
The "getCameraMatrix" function returns the camera matrix.~
~
- ''getCameraPosition''(): vec3~
The "getCameraPosition" function returns the position of the camera.~
~
- ''getCameraViewMatrix''(): mat4~
The "getCameraViewMatrix" function returns the camera view matrix (inverted camera matrix).~
~
- ''getClientScreenPosition''(x: number, y: number, z: number): vec2~
The "getClientScreenPosition" function calculates the client screen position of a 3D point given its world
coordinates.~
-- ''x'': The x world coordinate.~
-- ''y'': The y world coordinate.~
-- ''z'': The z world coordinate.~
~
- ''getClipMatrix''(): mat4~
The "getClipMatrix" function returns a the clip matrix.~
~
- ''getClipOffset''(): vec2~
The "getClipOffset" function returns the clip offset.~
~
- ''getClipOffsetX''(): number~
The "getClipOffsetX" function returns the x-coordinate of the clip offset.~
~
- ''getClipOffsetY''(): number~
The "getClipOffsetY" function returns the y-coordinate of the clip offset.~
~
- ''getOrthographicDepth''(): number~
The "getOrthographicDepth" function returns the `orthographicDepth`property.~
~
- ''getOrthographicSize''(): number~
The "getOrthographicSize" function returns the value of the "orthographicSize" property.~
~
- ''getPerspectiveFar''(): number~
The "getPerspectiveFar" function returns the value of the perspectiveFar property.~
~
- ''getPerspectiveFovy''(): number~
The "getPerspectiveFovy" function returns the fovy angle (perspective eye-angle).~
~
- ''getPerspectiveNear''(): number~
The "getPerspectiveNear" function returns the perspective near property.~
~
- ''getProjectionClipMatrix''(): mat4~
The "getProjectionClipMatrix" function returns the result of multiplying the clip matrix and the projection matrix.~
~
- ''getProjectionMatrix''(): mat4~
The "getProjectionMatrix" function returns a projection matrix based on the current projection mode.~
~
- ''getProjectionMode''(): ProjectionMode~
The "getProjectionMode" function returns the current projection mode.~
~
- ''getScreenNormalizedPosition''(x: number, y: number, z: number): vec2~
The "getScreenNormalizedPosition" function calculates the normalized screen position of a 3D point given its world
coordinates.~
-- ''x'': The x world coordinate.~
-- ''y'': The y world coordinate.~
-- ''z'': The z world coordinate.~
~
- ''getScreenSize''(): vec2~
The "getScreenSize" function returns the screen size property.~
~
- ''getViewProjectionClipMatrix''(): mat4~
The "getViewProjectionClipMatrix" function returns the result of multiplying the clip matrix,
projection matrix, and camera view matrix together.~
~
- ''getViewport''(): Gfx3Viewport~
The "getViewport" function returns the viewport of the view.~
~
- ''getViewportClientSize''(): vec2~
The "getViewportClientSize" function calculates the size of the viewport in client coordinates space.~
~
- ''getViewportSize''(): vec2~
The "getViewportSize" function calculates and returns the size of the viewport in pixels.~
~
- ''setBgColor''(r: number, g: number, b: number, a: number): void~
The "setBgColor" function sets the background color ranging from 0 to 1.~
-- ''r'': The parameter "r" represents the red component.~
-- ''g'': The parameter "g" represents the green component.~
-- ''b'': The parameter "b" represents the blue component.~
-- ''a'': The parameter "a" represents the alpha value.~
~
- ''setCameraMatrix''(cameraMatrix: mat4): void~
The "setCameraMatrix" function sets the camera matrix.~
-- ''cameraMatrix'': The cameraMatrix parameter is a 4x4 matrix that represents the
transformation applied to the camera. It is typically used to define the position, orientation, and
scale of the camera in the scene.~
~
- ''setClipOffset''(x: number, y: number): void~
The "setClipOffset" function set the clip offset with the given x and y coordinates.~
-- ''x'': The X coordinate of the clip offset.~
-- ''y'': The Y coordinate of the clip offset.~
~
- ''setOrthographicDepth''(orthographicDepth: number): void~
The "setOrthographicDepth" function sets the `orthographicDepth`property.~
-- ''orthographicDepth'': The `orthographicDepth` parameter is the depth of the orthographic view.~
~
- ''setOrthographicSize''(orthographicSize: number): void~
The  "setOrthographicSize" function sets the `orthographicSize` property.~
-- ''orthographicSize'': The orthographicSize parameter is the
size of the orthographic camera view. It determines how much of the scene is visible within the
camera's view frustum.~
~
- ''setPerspectiveFar''(perspectiveFar: number): void~
The "setPerspectiveFar" function sets the value of the perspectiveFar property.~
-- ''perspectiveFar'': The parameter `perspectiveFar` is the far
clipping plane of a perspective projection. It determines the maximum distance from the camera at
which objects will be rendered.~
~
- ''setPerspectiveFovy''(perspectiveFovy: number): void~
The "setPerspectiveFovy" function sets the fovy angle property.~
-- ''perspectiveFovy'': The `perspectiveFovy` parameter represents
the field of view angle in the vertical direction for a perspective projection.~
~
- ''setPerspectiveNear''(perspectiveNear: number): void~
The "setPerspectiveNear" function sets the value of the perspectiveNear property.~
-- ''perspectiveNear'': The parameter `perspectiveNear` represents the
distance to the near clipping plane of a perspective projection.~
~
- ''setProjectionMode''(projectionMode: ProjectionMode): void~
The "setProjectionMode" function sets the projection mode property.~
-- ''projectionMode'': The projection mode.~
~
- ''setScreenSize''(width: number, height: number): void~
The "setScreenSize" function sets the screen width and height property.~
-- ''width'': The width of the screen size.~
-- ''height'': The height of the screen size.~
~
- ''setViewport''(viewport: Gfx3Viewport): void~
The "setViewport" function sets the viewport of the view.~
-- ''viewport'': The `viewport` parameter represents
the dimensions and position of the viewport on canvas.~
** Constructors
- ''new Gfx3View''(): Gfx3View~
The constructor.~
